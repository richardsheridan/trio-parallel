name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Blacken:
    name: 'Formatting and linting'
    timeout-minutes: 2
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/tools-requirements.txt') }}
      - name: Install tools
        run: |
          python -m pip install -U pip
          python -m pip install -r tools-requirements.txt
      - name: Run Black
        id: black
        run: black --check trio_parallel
        continue-on-error: true
      - name: Run flake8
        id: flake8
        run: flake8 trio_parallel/ --ignore=D,E,W,F401,F403,F405,F821,F822
        continue-on-error: true
      - name: Fail on error
        if: steps.black.outcome != 'success' || steps.flake8.outcome != 'success'
        run: exit 1

  Build:
    name: Build
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
      - name: Build sdist wheel
        run: |
          python -m pip install -U build wheel
          python -m build --no-isolation  # this job is already super isolated
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: Build
#         by default build puts sdist and wheel here
          path: |
            dist/
          if-no-files-found: error

  Test:
    name: 'Test ${{ matrix.os }} (${{ matrix.python }} ${{ matrix.arch }})'
    needs: Build
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        python:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - 'pypy-3.6'
          - 'pypy-3.7'
        arch: [ x64, x86 ]
        include:
          - os: ubuntu-latest
            python: 'pypy-3.7-nightly'
            arch: x64
        exclude:
          - os: windows-latest
            python: 'pypy-3.6'
          - os: windows-latest
            python: 'pypy-3.7'
          - os: ubuntu-latest
            arch: x86
          - os: macos-latest
            arch: x86
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python }}'
          architecture: '${{ matrix.arch }}'
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: |
            ~/AppData/Local/pip/Cache
            ~/.cache/pip
            ~/Library/Caches/pip
          key: ${{ matrix.os }}-pip-${{ matrix.arch }}-${{ matrix.python }}-${{ hashFiles('**/test-requirements.txt') }}
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: Build
      - name: Run tests
        run: |
          rm -rf trio_parallel
          python -m pip install -U pip
          python -m pip install ./*.whl -r test-requirements.txt
          pytest --pyargs trio_parallel -W error -r a --cov-report xml --cov=trio_parallel --verbose
        shell: bash
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
